import Head from 'next/head'

import { Hsluv } from 'hsluv'
import { useState, useEffect } from 'react'
import { ChromePicker } from 'react-color'

import Tag from '../components/Tag'
import TextLink from '../components/TextLink'
import Mono from '../components/Mono'
import ExternalLink from '../components/ExternalLink'

export default function Home() {
  const [lightness, setLightness] = useState('68.8')
  const [hex, setHex] = useState('#FF79C6')
  const [textColor, setTextColor] = useState('white')
  const [linkColor, setLinkColor] = useState('#FF79C6')

  const calculateLightness = () => {
    const conv = new Hsluv()
    // Function to calculate the lightness from a hex value
    conv.hex = hex
    conv.hexToHsluv()

    //Set the text color to be black or white
    const calculatedTextColor = () => (conv.hsluv_l > 67 ? 'BLACK' : 'WHITE')
    setTextColor(calculatedTextColor)
  }

  const accessibleLightness = () => {
    const conv = new Hsluv()
    conv.hex = hex
    conv.hexToHsluv()

    if (conv.hsluv_l <= 66) {
      conv.hsluv_l = 67
      conv.hsluvToHex()
    }

    setLinkColor(conv.hex)
  }

  const handleColorChange = (color) => {
    setHex(color.hex)
  }

  return (
    <div
      className='app'
      style={{
        backgroundColor: hex,
        color: textColor,
      }}
    >
      <Head>
        <title>HSLUV calculator</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <div
        className='app'
        style={{
          backgroundColor: hex,
        }}
      >
        <h1
          style={{
            color: textColor,
          }}
        >
          Pick an accent color
        </h1>
        <ChromePicker
          color={hex}
          disableAlpha={true}
          onChange={handleColorChange}
          className='picker'
        />
        <div className='results'>
          <p>
            Accent color <Mono style={{ color: 'white' }}>{hex}</Mono> has a{' '}
            <ExternalLink href='https://www.hsluv.org/'>HSLuv</ExternalLink>{' '}
            lightness of <Tag>{lightness}</Tag>
          </p>
          <p>
            We then get the brand color, and if it{`'`}s above 67 lightness, we
            keep it as is. If not, we interpolate it to 67 to have enough
            contrast with a dark background.
          </p>
          <p>
            <TextLink color={linkColor}>
              Link color is &nbsp;
              <Mono>{linkColor}</Mono>
            </TextLink>
          </p>
          <p>
            View on{' '}
            <ExternalLink href='https://github.com/digitallymarked/hsluv-calculator'>
              <svg height='20' width='20' viewBox='0 0 16 16'>
                <path d='M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z' />
              </svg>
              Github
            </ExternalLink>
          </p>
        </div>
      </div>
    </div>
  )
}
