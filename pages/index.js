import Head from 'next/head'

import { Hsluv } from 'hsluv'
import { useState, useEffect } from 'react'
import { ChromePicker } from 'react-color'

import Tag from '../components/Tag'
import TextLink from '../components/TextLink'
import Mono from '../components/Mono'
import ExternalLink from '../components/ExternalLink'

export default function Home() {
  const [lightness, setLightness] = useState('')
  const [hex, setHex] = useState('#ff79c6')
  const [textColor, setTextColor] = useState('')

  const calculateLightness = () => {
    const conv = new Hsluv()
    // Function to calculate the lightness from a hex value
    conv.hex = hex
    conv.hexToHsluv()

    //Set the text color to be black or white
    const calculatedTextColor = () => (conv.hsluv_l > 67 ? 'BLACK' : 'WHITE')
    setTextColor(calculatedTextColor)
  }

  useEffect(() => {
    //Calculate lightness on page load
    calculateLightness(hex)
    const num = Number(conv.hsluv_l).toFixed(1)
    setLightness(num)
  })

  const handleColorChange = (color) => {
    setHex(color.hex)
  }

  return (
    <div
      className='app'
      style={{
        backgroundColor: hex,
        color: textColor,
      }}
    >
      <Head>
        <title>HSLUV calculator</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <div
        className='app'
        style={{
          backgroundColor: hex,
        }}
      >
        <h1
          style={{
            color: textColor,
          }}
        >
          Pick an accent color
        </h1>
        <ChromePicker
          color={hex}
          disableAlpha={true}
          onChange={handleColorChange}
          className='picker'
        />
        <div className='results'>
          <p>
            Accent color <Mono>{hex}</Mono> has a{' '}
            <ExternalLink href='https://www.hsluv.org/'>HSLuv</ExternalLink>{' '}
            lightness of <Tag>{lightness}</Tag>
          </p>
          <p>
            We then get the brand color, and if it{`'`}s above 67 lightness, we
            keep it as is. If not, we interpolate it to 67 to have enough
            contrast with a dark background.
          </p>
          <p>
            <TextLink color={linkColor}>
              Link color is &nbsp;
              <Mono>{linkColor}</Mono>
            </TextLink>
          </p>
        </div>
      </div>
    </div>
  )
}
